{"version":3,"file":"static/js/783.edaffd87.chunk.js","mappings":"kRAGaA,EAASC,EAAAA,EAAAA,OAAH,0WAoBNC,GAAWD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,kD,SCVrB,EAVmB,SAAC,GAAY,IAAVG,EAAS,EAATA,GACpB,OACE,SAACF,EAAD,CAAUE,GAAIA,EAAd,UACE,UAACJ,EAAD,YACE,SAAC,MAAD,IAAqB,iBAI5B,ECPYK,EAAOJ,EAAAA,EAAAA,IAAH,sBAEJK,EAAML,EAAAA,EAAAA,IAAH,yCAIHM,EAAYN,EAAAA,EAAAA,GAAH,sBAETO,GAAQP,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,sBC6ClB,EAnDsB,WAAO,IAAD,IAC1B,GAA0CQ,EAAAA,EAAAA,UAAS,CAAC,GAApD,eAAOC,EAAP,KAAsBC,EAAtB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAU,qBADCC,EAAAA,EAAAA,MACWC,aAAZ,aAAG,EAAgBC,YAAnB,mBAEhBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBP,GAASQ,KAAKT,EACjC,GAAE,CAACC,IAEJ,IAAQS,EACNX,EADMW,YAAaC,EACnBZ,EADmBY,MAAOC,EAC1Bb,EAD0Ba,OAAQC,EAClCd,EADkCc,SAAUC,EAC5Cf,EAD4Ce,aAAcC,EAC1DhB,EAD0DgB,aAG5D,OACE,iCAEE,SAAC,EAAD,CAAYtB,GAAIU,KAChB,UAACT,EAAD,YACE,SAACC,EAAD,CACEqB,IAAG,yCAAoCN,GACvCO,IAAKN,IAGNA,IACC,0BACGA,EAAM,IAAEI,EAAaG,OAAO,EAAG,OAIpC,yBAAG,eAAaJ,GAAgBK,KAAKC,MAAqB,GAAfN,GAAmB,QAC9D,wBAAI,cACJ,uBAAID,KACJ,wBAAI,WACHD,IAAU,uBAAIA,EAAOS,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,YAErD,wBAAI,4BACJ,UAAC3B,EAAD,YACE,yBACE,SAACC,EAAD,CAAOJ,GAAG,OAAV,SAAiB,YAEnB,yBACE,SAACI,EAAD,CAAOJ,GAAG,UAAV,SAAoB,kBAIxB,SAAC,KAAD,MAGL,C,yKCrDD+B,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,oGACTF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD/B,cACrBE,EADqB,yBAEpBA,EAAIC,MAFgB,2CAAH,qDAKbC,EAAiB,mCAAG,WAAMC,GAAN,uFACbN,EAAAA,EAAAA,IAAA,+BACQC,EADR,4DACmEK,IAFtD,cACzBH,EADyB,yBAIxBA,EAAIC,MAJoB,2CAAH,sDAOjBpB,EAAiB,mCAAG,WAAMP,GAAN,uFACbuB,EAAAA,EAAAA,IAAA,gBACPvB,EADO,oBACYwB,EADZ,oBADa,cACzBE,EADyB,yBAIxBA,EAAIC,MAJoB,2CAAH,sDAOjBG,EAAS,mCAAG,WAAM9B,GAAN,uFACLuB,EAAAA,EAAAA,IAAA,gBACPvB,EADO,4BACoBwB,EADpB,oBADK,cACjBE,EADiB,yBAIhBA,EAAIC,MAJY,2CAAH,qD","sources":["components/ButtonBack/ButtonBack.styled.js","components/ButtonBack/ButtonBack.jsx","pages/MoviesDetails/MoviesDetails.styled.js","pages/MoviesDetails/MoviesDetails.jsx","service/fetchAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled.button`\ncursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  text-decoration: none;\n  width: 100px;\n  margin: 10px;\n  padding: 5px;\n  border: none;\n  background: transparent;\n  border-radius: 4px;\n  outline: 2px solid black;\n\n  :hover {\n    color: white;\n    background-color: orange;\n  }\n`;\n\nexport const LinkBack = styled(Link)`\n  text-decoration: none;\n`;\n","import { FiArrowLeftCircle } from 'react-icons/fi';\nimport { Button, LinkBack } from './ButtonBack.styled';\n\nconst ButtonBack = ({ to }) => {\n  return (\n    <LinkBack to={to}>\n      <Button>\n        <FiArrowLeftCircle /> Come Back\n      </Button>\n    </LinkBack>\n  );\n};\n\nexport default ButtonBack;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\n\nexport const Wrap = styled.div``;\n\nexport const Img = styled.img`\n  width: 300px;\n`;\n\nexport const Container = styled.ul``;\n\nexport const Links = styled(Link)``;\n\n\n","import { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchDetailsMovie } from '../../service/fetchAPI';\nimport ButtonBack from 'components/ButtonBack/ButtonBack';\nimport { Wrap, Img, Container, Links } from './MoviesDetails.styled';\n\nconst MoviesDetails = () => {\n  const [moviesDetails, setMoviesDetails] = useState({});\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const buttonBack = location.state?.from ?? `/movies`;\n\n  useEffect(() => {\n    fetchDetailsMovie(movieId).then(setMoviesDetails);\n  }, [movieId]);\n\n  const { poster_path, title, genres, overview, vote_average, release_date } =\n    moviesDetails;\n\n  return (\n    <>\n \n      <ButtonBack to={buttonBack} />\n      <Wrap>\n        <Img\n          src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n          alt={title}\n        />\n\n        {title && (\n          <h2>\n            {title} {release_date.substr(0, 4)}\n          </h2>\n        )}\n\n        <p>User Score: {vote_average && Math.floor(vote_average * 10)}%</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h2>Genres</h2>\n        {genres && <p>{genres.map(({ name }) => name).join(', ')}</p>}\n      </Wrap>\n      <h3>Additional information</h3>\n      <Container>\n        <li>\n          <Links to=\"cast\">Cast</Links>\n        </li>\n        <li>\n          <Links to=\"reviews\">Reviews</Links>\n        </li>\n      </Container>\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '992758a4802a699e8df27d4d6efc34fb';\n\nexport const fetchTrending = async () => {\n  const res = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const res = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return res.data;\n};\n\nexport const fetchDetailsMovie = async movieId => {\n  const res = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const fetchCast = async movieId => {\n  const res = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const fetchReviews = async movieId => {\n  const res = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data;\n};\n"],"names":["Button","styled","LinkBack","Link","to","Wrap","Img","Container","Links","useState","moviesDetails","setMoviesDetails","movieId","useParams","buttonBack","useLocation","state","from","useEffect","fetchDetailsMovie","then","poster_path","title","genres","overview","vote_average","release_date","src","alt","substr","Math","floor","map","name","join","axios","API_KEY","fetchTrending","res","data","fetchSearchMovies","query","fetchCast"],"sourceRoot":""}